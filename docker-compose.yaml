version: '3'
services:

# Mininet
  mininet-in-a-container:
    privileged: true
    tty: true
    environment:
      - DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.x11-unix
      - /lib/modules:/lib/modules
      - ./mininet/myTopo.py:/root/myTopo.py
    container_name: mininet
    image: pmanzoni/mininet-in-a-container
    networks:
      network:
        ipv4_address: 175.24.1.9

# ONOS Cluster
  atomix1:
    container_name: atomix1
    image: atomix/atomix:3.1.5
    restart: always
    ports:
      - 5679
    networks:
      network:
        ipv4_address: 175.24.1.2
    hostname: atomix1
    volumes:
      - ./atomix/atomix1.conf:/opt/atomix/conf/atomix.
  atomix2:
    container_name: atomix2
    image: atomix/atomix:3.1.5
    restart: always
    ports:
      - 5679
    networks:
      network:
        ipv4_address: 175.24.1.3
    hostname: atomix2
    volumes:
      - ./atomix/atomix2.conf:/opt/atomix/conf/atomix.conf
  atomix3:
    container_name: atomix3
    image: atomix/atomix:3.1.5
    restart: always
    ports:
      - 5679
    networks:
      network:
        ipv4_address: 175.24.1.4
    hostname: atomix3
    volumes:
      - ./atomix/atomix3.conf:/opt/atomix/conf/atomix.conf
  onos1:
    container_name: onos1
    image: onosproject/onos:2.5.1
    restart: always
    ports:
      - 8181:8181
      - 8101:8101
      - 6653:6653
    networks:
      network:
        ipv4_address: 175.24.1.5
    hostname: onos1
    environment:
      - ONOS_APPS=fwd,openflow
    volumes:
      - ./onos/cluster1.json:/root/onos/config/cluster.json
  onos2:
    container_name: onos2
    image: onosproject/onos:2.5.1
    restart: always
    ports:
      - 8182:8181
      - 8102:8101
      - 6654:6653
    networks:
      network:
        ipv4_address: 175.24.1.6
    hostname: onos2
    volumes:
      - ./onos/cluster2.json:/root/onos/config/cluster.json
  onos3:
    container_name: onos3
    image: onosproject/onos:2.5.1
    restart: always
    ports:
      - 8183:8181
      - 8103:8101
      - 6655:6653
    networks:
      network:
        ipv4_address: 175.24.1.7
    hostname: onos3
    volumes:
      - ./onos/cluster3.json:/root/onos/config/cluster.json

  envoyfront:
    container_name: envoyfront
    build:
      context: .
      dockerfile: dockerfile
    volumes:
      - ./envoy/front.yaml:/etc/envoy/envoy.yaml
    ports:
      - 6969:6969
    networks:
      network:
        ipv4_address: 175.24.1.10
    hostname: envoyfront
      
# Network Processing
  goflow2:
    container_name: goflow2
    image: netsampler/goflow2:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
      - 6343:6343/udp
      - 2055:2055/udp
    restart: always
    command: 
    - -transport.kafka.brokers=kafka:9092
    - -transport=kafka
    - -transport.kafka.topic=flows
    - -format=pb
    - -format.protobuf.fixedlen=true
    - -format.selector SrcAddr,DstAddr,SrcMac,DstMac,InIf,OutIf,SrcPort,DstPort,ObservationPointID,ObservationDomainID,SequenceNum,TimeFlowStart,TimeFlowEnd
    networks:
      network:
        ipv4_address: 175.24.1.14
    hostname: goflow2

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.6.3
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    networks:
      network:
        ipv4_address: 175.24.1.15
    hostname: zookeeper

  kafka:
    container_name: kafka
    image: bitnami/kafka:2.8.0
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_DELETE_TOPIC_ENABLE=true
    restart: always
    depends_on:
      - zookeeper
    networks:
      network:
        ipv4_address: 175.24.1.16
    hostname: kafka

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 175.24.1.0/24
